use crate::definitions::traits::{FromJson, FromJsonError};
use serde_cbor::Value as Cbor;
use serde_json::Value as Json;

/// United Nations Distinguishing Sign, as per ISO/IEC 18013-1:2018 Annex F.
#[derive(Clone, Debug)]
pub enum UNDistinguishingSign {
    A,
    AFG,
    AL,
    AM,
    AND,
    AUS,
    AZ,
    B,
    BD,
    BDS,
    BF,
    BG,
    BH,
    BIH,
    BOL,
    BR,
    BRN,
    BRU,
    BS,
    BUR,
    BVI,
    BW,
    BY,
    CAM,
    CDN,
    CH,
    CI,
    CL,
    CO,
    CR,
    CU,
    CY,
    CZ,
    D,
    DK,
    DOM,
    DY,
    DZ,
    E,
    EAK,
    EAT,
    EAU,
    EAZ,
    EC,
    ER,
    ES,
    EST,
    ET,
    ETH,
    F,
    FIN,
    FJI,
    FL,
    FO,
    G,
    GB,
    GBA,
    GBG,
    GBJ,
    GBM,
    GBZ,
    GCA,
    GE,
    GH,
    GR,
    GUY,
    H,
    HKJ,
    HR,
    I,
    IL,
    IND,
    IR,
    IRL,
    IRQ,
    IS,
    J,
    JA,
    K,
    KG,
    KWT,
    KZ,
    L,
    LAO,
    LAR,
    LB,
    LS,
    LT,
    LV,
    M,
    MA,
    MAL,
    MC,
    MD,
    MEX,
    MGL,
    MK,
    MNE,
    MOC,
    MS,
    MW,
    N,
    NA,
    NAM,
    NAU,
    NEP,
    NIC,
    NL,
    NZ,
    P,
    PA,
    PE,
    PK,
    PL,
    PNG,
    PY,
    Q,
    RA,
    RC,
    RCA,
    RCB,
    RCH,
    RG,
    RH,
    RI,
    RIM,
    RL,
    RM,
    RMM,
    RN,
    RNR,
    RO,
    ROK,
    ROU,
    RP,
    RSM,
    RU,
    RUS,
    RWA,
    S,
    SA,
    SD,
    SGP,
    SK,
    SLO,
    SME,
    SN,
    SO,
    SRB,
    SUD,
    SY,
    SYR,
    T,
    TCH,
    TD,
    TG,
    TJ,
    TM,
    TN,
    TR,
    TT,
    TZA,
    UA,
    UAE,
    USA,
    UZ,
    V,
    VN,
    WAG,
    WAL,
    WAN,
    WD,
    WG,
    WL,
    WS,
    WV,
    YAR,
    YV,
    ZA,
    ZRE,
    ZW,
    NoneApplicable(String),
}

impl From<UNDistinguishingSign> for Cbor {
    fn from(s: UNDistinguishingSign) -> Cbor {
        String::from(s).into()
    }
}

impl From<UNDistinguishingSign> for String {
    fn from(s: UNDistinguishingSign) -> String {
        match s {
            UNDistinguishingSign::A => "A".to_string(),
            UNDistinguishingSign::AFG => "AFG".to_string(),
            UNDistinguishingSign::AL => "AL".to_string(),
            UNDistinguishingSign::AM => "AM".to_string(),
            UNDistinguishingSign::AND => "AND".to_string(),
            UNDistinguishingSign::AUS => "AUS".to_string(),
            UNDistinguishingSign::AZ => "AZ".to_string(),
            UNDistinguishingSign::B => "B".to_string(),
            UNDistinguishingSign::BD => "BD".to_string(),
            UNDistinguishingSign::BDS => "BDS".to_string(),
            UNDistinguishingSign::BF => "BF".to_string(),
            UNDistinguishingSign::BG => "BG".to_string(),
            UNDistinguishingSign::BH => "BH".to_string(),
            UNDistinguishingSign::BIH => "BIH".to_string(),
            UNDistinguishingSign::BOL => "BOL".to_string(),
            UNDistinguishingSign::BR => "BR".to_string(),
            UNDistinguishingSign::BRN => "BRN".to_string(),
            UNDistinguishingSign::BRU => "BRU".to_string(),
            UNDistinguishingSign::BS => "BS".to_string(),
            UNDistinguishingSign::BUR => "BUR".to_string(),
            UNDistinguishingSign::BVI => "BVI".to_string(),
            UNDistinguishingSign::BW => "BW".to_string(),
            UNDistinguishingSign::BY => "BY".to_string(),
            UNDistinguishingSign::CAM => "CAM".to_string(),
            UNDistinguishingSign::CDN => "CDN".to_string(),
            UNDistinguishingSign::CH => "CH".to_string(),
            UNDistinguishingSign::CI => "CI".to_string(),
            UNDistinguishingSign::CL => "CL".to_string(),
            UNDistinguishingSign::CO => "CO".to_string(),
            UNDistinguishingSign::CR => "CR".to_string(),
            UNDistinguishingSign::CU => "CU".to_string(),
            UNDistinguishingSign::CY => "CY".to_string(),
            UNDistinguishingSign::CZ => "CZ".to_string(),
            UNDistinguishingSign::D => "D".to_string(),
            UNDistinguishingSign::DK => "DK".to_string(),
            UNDistinguishingSign::DOM => "DOM".to_string(),
            UNDistinguishingSign::DY => "DY".to_string(),
            UNDistinguishingSign::DZ => "DZ".to_string(),
            UNDistinguishingSign::E => "E".to_string(),
            UNDistinguishingSign::EAK => "EAK".to_string(),
            UNDistinguishingSign::EAT => "EAT".to_string(),
            UNDistinguishingSign::EAU => "EAU".to_string(),
            UNDistinguishingSign::EAZ => "EAZ".to_string(),
            UNDistinguishingSign::EC => "EC".to_string(),
            UNDistinguishingSign::ER => "ER".to_string(),
            UNDistinguishingSign::ES => "ES".to_string(),
            UNDistinguishingSign::EST => "EST".to_string(),
            UNDistinguishingSign::ET => "ET".to_string(),
            UNDistinguishingSign::ETH => "ETH".to_string(),
            UNDistinguishingSign::F => "F".to_string(),
            UNDistinguishingSign::FIN => "FIN".to_string(),
            UNDistinguishingSign::FJI => "FJI".to_string(),
            UNDistinguishingSign::FL => "FL".to_string(),
            UNDistinguishingSign::FO => "FO".to_string(),
            UNDistinguishingSign::G => "G".to_string(),
            UNDistinguishingSign::GB => "GB".to_string(),
            UNDistinguishingSign::GBA => "GBA".to_string(),
            UNDistinguishingSign::GBG => "GBG".to_string(),
            UNDistinguishingSign::GBJ => "GBJ".to_string(),
            UNDistinguishingSign::GBM => "GBM".to_string(),
            UNDistinguishingSign::GBZ => "GBZ".to_string(),
            UNDistinguishingSign::GCA => "GCA".to_string(),
            UNDistinguishingSign::GE => "GE".to_string(),
            UNDistinguishingSign::GH => "GH".to_string(),
            UNDistinguishingSign::GR => "GR".to_string(),
            UNDistinguishingSign::GUY => "GUY".to_string(),
            UNDistinguishingSign::H => "H".to_string(),
            UNDistinguishingSign::HKJ => "HKJ".to_string(),
            UNDistinguishingSign::HR => "HR".to_string(),
            UNDistinguishingSign::I => "I".to_string(),
            UNDistinguishingSign::IL => "IL".to_string(),
            UNDistinguishingSign::IND => "IND".to_string(),
            UNDistinguishingSign::IR => "IR".to_string(),
            UNDistinguishingSign::IRL => "IRL".to_string(),
            UNDistinguishingSign::IRQ => "IRQ".to_string(),
            UNDistinguishingSign::IS => "IS".to_string(),
            UNDistinguishingSign::J => "J".to_string(),
            UNDistinguishingSign::JA => "JA".to_string(),
            UNDistinguishingSign::K => "K".to_string(),
            UNDistinguishingSign::KG => "KG".to_string(),
            UNDistinguishingSign::KWT => "KWT".to_string(),
            UNDistinguishingSign::KZ => "KZ".to_string(),
            UNDistinguishingSign::L => "L".to_string(),
            UNDistinguishingSign::LAO => "LAO".to_string(),
            UNDistinguishingSign::LAR => "LAR".to_string(),
            UNDistinguishingSign::LB => "LB".to_string(),
            UNDistinguishingSign::LS => "LS".to_string(),
            UNDistinguishingSign::LT => "LT".to_string(),
            UNDistinguishingSign::LV => "LV".to_string(),
            UNDistinguishingSign::M => "M".to_string(),
            UNDistinguishingSign::MA => "MA".to_string(),
            UNDistinguishingSign::MAL => "MAL".to_string(),
            UNDistinguishingSign::MC => "MC".to_string(),
            UNDistinguishingSign::MD => "MD".to_string(),
            UNDistinguishingSign::MEX => "MEX".to_string(),
            UNDistinguishingSign::MGL => "MGL".to_string(),
            UNDistinguishingSign::MK => "MK".to_string(),
            UNDistinguishingSign::MNE => "MNE".to_string(),
            UNDistinguishingSign::MOC => "MOC".to_string(),
            UNDistinguishingSign::MS => "MS".to_string(),
            UNDistinguishingSign::MW => "MW".to_string(),
            UNDistinguishingSign::N => "N".to_string(),
            UNDistinguishingSign::NA => "NA".to_string(),
            UNDistinguishingSign::NAM => "NAM".to_string(),
            UNDistinguishingSign::NAU => "NAU".to_string(),
            UNDistinguishingSign::NEP => "NEP".to_string(),
            UNDistinguishingSign::NIC => "NIC".to_string(),
            UNDistinguishingSign::NL => "NL".to_string(),
            UNDistinguishingSign::NZ => "NZ".to_string(),
            UNDistinguishingSign::P => "P".to_string(),
            UNDistinguishingSign::PA => "PA".to_string(),
            UNDistinguishingSign::PE => "PE".to_string(),
            UNDistinguishingSign::PK => "PK".to_string(),
            UNDistinguishingSign::PL => "PL".to_string(),
            UNDistinguishingSign::PNG => "PNG".to_string(),
            UNDistinguishingSign::PY => "PY".to_string(),
            UNDistinguishingSign::Q => "Q".to_string(),
            UNDistinguishingSign::RA => "RA".to_string(),
            UNDistinguishingSign::RC => "RC".to_string(),
            UNDistinguishingSign::RCA => "RCA".to_string(),
            UNDistinguishingSign::RCB => "RCB".to_string(),
            UNDistinguishingSign::RCH => "RCH".to_string(),
            UNDistinguishingSign::RG => "RG".to_string(),
            UNDistinguishingSign::RH => "RH".to_string(),
            UNDistinguishingSign::RI => "RI".to_string(),
            UNDistinguishingSign::RIM => "RIM".to_string(),
            UNDistinguishingSign::RL => "RL".to_string(),
            UNDistinguishingSign::RM => "RM".to_string(),
            UNDistinguishingSign::RMM => "RMM".to_string(),
            UNDistinguishingSign::RN => "RN".to_string(),
            UNDistinguishingSign::RNR => "RNR".to_string(),
            UNDistinguishingSign::RO => "RO".to_string(),
            UNDistinguishingSign::ROK => "ROK".to_string(),
            UNDistinguishingSign::ROU => "ROU".to_string(),
            UNDistinguishingSign::RP => "RP".to_string(),
            UNDistinguishingSign::RSM => "RSM".to_string(),
            UNDistinguishingSign::RU => "RU".to_string(),
            UNDistinguishingSign::RUS => "RUS".to_string(),
            UNDistinguishingSign::RWA => "RWA".to_string(),
            UNDistinguishingSign::S => "S".to_string(),
            UNDistinguishingSign::SA => "SA".to_string(),
            UNDistinguishingSign::SD => "SD".to_string(),
            UNDistinguishingSign::SGP => "SGP".to_string(),
            UNDistinguishingSign::SK => "SK".to_string(),
            UNDistinguishingSign::SLO => "SLO".to_string(),
            UNDistinguishingSign::SME => "SME".to_string(),
            UNDistinguishingSign::SN => "SN".to_string(),
            UNDistinguishingSign::SO => "SO".to_string(),
            UNDistinguishingSign::SRB => "SRB".to_string(),
            UNDistinguishingSign::SUD => "SUD".to_string(),
            UNDistinguishingSign::SY => "SY".to_string(),
            UNDistinguishingSign::SYR => "SYR".to_string(),
            UNDistinguishingSign::T => "T".to_string(),
            UNDistinguishingSign::TCH => "TCH".to_string(),
            UNDistinguishingSign::TD => "TD".to_string(),
            UNDistinguishingSign::TG => "TG".to_string(),
            UNDistinguishingSign::TJ => "TJ".to_string(),
            UNDistinguishingSign::TM => "TM".to_string(),
            UNDistinguishingSign::TN => "TN".to_string(),
            UNDistinguishingSign::TR => "TR".to_string(),
            UNDistinguishingSign::TT => "TT".to_string(),
            UNDistinguishingSign::TZA => "TZA".to_string(),
            UNDistinguishingSign::UA => "UA".to_string(),
            UNDistinguishingSign::UAE => "UAE".to_string(),
            UNDistinguishingSign::USA => "USA".to_string(),
            UNDistinguishingSign::UZ => "UZ".to_string(),
            UNDistinguishingSign::V => "V".to_string(),
            UNDistinguishingSign::VN => "VN".to_string(),
            UNDistinguishingSign::WAG => "WAG".to_string(),
            UNDistinguishingSign::WAL => "WAL".to_string(),
            UNDistinguishingSign::WAN => "WAN".to_string(),
            UNDistinguishingSign::WD => "WD".to_string(),
            UNDistinguishingSign::WG => "WG".to_string(),
            UNDistinguishingSign::WL => "WL".to_string(),
            UNDistinguishingSign::WS => "WS".to_string(),
            UNDistinguishingSign::WV => "WV".to_string(),
            UNDistinguishingSign::YAR => "YAR".to_string(),
            UNDistinguishingSign::YV => "YV".to_string(),
            UNDistinguishingSign::ZA => "ZA".to_string(),
            UNDistinguishingSign::ZRE => "ZRE".to_string(),
            UNDistinguishingSign::ZW => "ZW".to_string(),
            UNDistinguishingSign::NoneApplicable(s) => s,
        }
    }
}

impl From<String> for UNDistinguishingSign {
    fn from(s: String) -> Self {
        match s.as_str() {
            "A" => Self::A,
            "AFG" => Self::AFG,
            "AL" => Self::AL,
            "AM" => Self::AM,
            "AND" => Self::AND,
            "AUS" => Self::AUS,
            "AZ" => Self::AZ,
            "B" => Self::B,
            "BD" => Self::BD,
            "BDS" => Self::BDS,
            "BF" => Self::BF,
            "BG" => Self::BG,
            "BH" => Self::BH,
            "BIH" => Self::BIH,
            "BOL" => Self::BOL,
            "BR" => Self::BR,
            "BRN" => Self::BRN,
            "BRU" => Self::BRU,
            "BS" => Self::BS,
            "BUR" => Self::BUR,
            "BVI" => Self::BVI,
            "BW" => Self::BW,
            "BY" => Self::BY,
            "CAM" => Self::CAM,
            "CDN" => Self::CDN,
            "CH" => Self::CH,
            "CI" => Self::CI,
            "CL" => Self::CL,
            "CO" => Self::CO,
            "CR" => Self::CR,
            "CU" => Self::CU,
            "CY" => Self::CY,
            "CZ" => Self::CZ,
            "D" => Self::D,
            "DK" => Self::DK,
            "DOM" => Self::DOM,
            "DY" => Self::DY,
            "DZ" => Self::DZ,
            "E" => Self::E,
            "EAK" => Self::EAK,
            "EAT" => Self::EAT,
            "EAU" => Self::EAU,
            "EAZ" => Self::EAZ,
            "EC" => Self::EC,
            "ER" => Self::ER,
            "ES" => Self::ES,
            "EST" => Self::EST,
            "ET" => Self::ET,
            "ETH" => Self::ETH,
            "F" => Self::F,
            "FIN" => Self::FIN,
            "FJI" => Self::FJI,
            "FL" => Self::FL,
            "FO" => Self::FO,
            "G" => Self::G,
            "GB" => Self::GB,
            "GBA" => Self::GBA,
            "GBG" => Self::GBG,
            "GBJ" => Self::GBJ,
            "GBM" => Self::GBM,
            "GBZ" => Self::GBZ,
            "GCA" => Self::GCA,
            "GE" => Self::GE,
            "GH" => Self::GH,
            "GR" => Self::GR,
            "GUY" => Self::GUY,
            "H" => Self::H,
            "HKJ" => Self::HKJ,
            "HR" => Self::HR,
            "I" => Self::I,
            "IL" => Self::IL,
            "IND" => Self::IND,
            "IR" => Self::IR,
            "IRL" => Self::IRL,
            "IRQ" => Self::IRQ,
            "IS" => Self::IS,
            "J" => Self::J,
            "JA" => Self::JA,
            "K" => Self::K,
            "KG" => Self::KG,
            "KWT" => Self::KWT,
            "KZ" => Self::KZ,
            "L" => Self::L,
            "LAO" => Self::LAO,
            "LAR" => Self::LAR,
            "LB" => Self::LB,
            "LS" => Self::LS,
            "LT" => Self::LT,
            "LV" => Self::LV,
            "M" => Self::M,
            "MA" => Self::MA,
            "MAL" => Self::MAL,
            "MC" => Self::MC,
            "MD" => Self::MD,
            "MEX" => Self::MEX,
            "MGL" => Self::MGL,
            "MK" => Self::MK,
            "MNE" => Self::MNE,
            "MOC" => Self::MOC,
            "MS" => Self::MS,
            "MW" => Self::MW,
            "N" => Self::N,
            "NA" => Self::NA,
            "NAM" => Self::NAM,
            "NAU" => Self::NAU,
            "NEP" => Self::NEP,
            "NIC" => Self::NIC,
            "NL" => Self::NL,
            "NZ" => Self::NZ,
            "P" => Self::P,
            "PA" => Self::PA,
            "PE" => Self::PE,
            "PK" => Self::PK,
            "PL" => Self::PL,
            "PNG" => Self::PNG,
            "PY" => Self::PY,
            "Q" => Self::Q,
            "RA" => Self::RA,
            "RC" => Self::RC,
            "RCA" => Self::RCA,
            "RCB" => Self::RCB,
            "RCH" => Self::RCH,
            "RG" => Self::RG,
            "RH" => Self::RH,
            "RI" => Self::RI,
            "RIM" => Self::RIM,
            "RL" => Self::RL,
            "RM" => Self::RM,
            "RMM" => Self::RMM,
            "RN" => Self::RN,
            "RNR" => Self::RNR,
            "RO" => Self::RO,
            "ROK" => Self::ROK,
            "ROU" => Self::ROU,
            "RP" => Self::RP,
            "RSM" => Self::RSM,
            "RU" => Self::RU,
            "RUS" => Self::RUS,
            "RWA" => Self::RWA,
            "S" => Self::S,
            "SA" => Self::SA,
            "SD" => Self::SD,
            "SGP" => Self::SGP,
            "SK" => Self::SK,
            "SLO" => Self::SLO,
            "SME" => Self::SME,
            "SN" => Self::SN,
            "SO" => Self::SO,
            "SRB" => Self::SRB,
            "SUD" => Self::SUD,
            "SY" => Self::SY,
            "SYR" => Self::SYR,
            "T" => Self::T,
            "TCH" => Self::TCH,
            "TD" => Self::TD,
            "TG" => Self::TG,
            "TJ" => Self::TJ,
            "TM" => Self::TM,
            "TN" => Self::TN,
            "TR" => Self::TR,
            "TT" => Self::TT,
            "TZA" => Self::TZA,
            "UA" => Self::UA,
            "UAE" => Self::UAE,
            "USA" => Self::USA,
            "UZ" => Self::UZ,
            "V" => Self::V,
            "VN" => Self::VN,
            "WAG" => Self::WAG,
            "WAL" => Self::WAL,
            "WAN" => Self::WAN,
            "WD" => Self::WD,
            "WG" => Self::WG,
            "WL" => Self::WL,
            "WS" => Self::WS,
            "WV" => Self::WV,
            "YAR" => Self::YAR,
            "YV" => Self::YV,
            "ZA" => Self::ZA,
            "ZRE" => Self::ZRE,
            "ZW" => Self::ZW,
            _ => Self::NoneApplicable(s),
        }
    }
}

impl FromJson for UNDistinguishingSign {
    fn from_json(v: &Json) -> Result<Self, FromJsonError> {
        String::from_json(v).map(Into::into)
    }
}
